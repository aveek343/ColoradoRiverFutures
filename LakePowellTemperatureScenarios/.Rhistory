#Powell zones
geom_line(data=dfPowellZonesShortMelt, aes(x = value, y = level_feet, group = Zone), size=1, color="purple", linetype = "longdash") +
scale_x_continuous(trans= "reverse") +
scale_y_continuous(limits = c(3300,3715), breaks = seq(3250,3711, by=50),labels=seq(3250,3711, by=50),  sec.axis = sec_axis(~. +0, name = "Active Storage\n(million acre-feet)", breaks = dfPowellZonesShort$level_feet, labels = dfPowellZonesShort$rightlabel)) +
#Continuous color scale by elevation
#scale_color_continuous(low=palBlues[3],high=palBlues[9], na.value="White", guide = "colorbar", aesthetics="color") +
#Color breaked by zone
scale_color_manual(breaks = c(3710,3650,3670,3525),values=c(palBlues[9],palBlues[7],palBlues[5],palBlues[3])) +
theme_bw() +
#coord_fixed() +
labs(x="Temperature (oC)", y="Elevation (feet)", color="Start Elevation\n(feet)")
cLakeElevationClasses <- c(3710,3650,3670,3525)
dfPowellTempLevelsPlot$ElevationClass <- 0
for (lev in cLakeElevationClasses) {
cLakeElevationClasses$ElevationClass <- ifelse(dfPowellTempLevelsPlot$Elevation..feet. >= lev,lev,cLakeElevationClasses$ElevationClass)
}
dfPowellTempLevelsPlot$ElevationClass <- 0
for (lev in cLakeElevationClasses) {
dfPowellTempLevelsPlot$ElevationClass <- ifelse(dfPowellTempLevelsPlot$Elevation..feet. >= lev,lev,dfPowellTempLevelsPlot$ElevationClass)
}
dfPowellTempLevelsPlot$ElevationClass <- 0
for (lev in cLakeElevationClasses) {
dfPowellTempLevelsPlot$ElevationClass <- ifelse(dfPowellTempLevelsPlot$Elevation..feet. <= lev,lev,dfPowellTempLevelsPlot$ElevationClass)
}
ggplot() +
#Temperature profiles
geom_line(data=dfPlot, aes(x = T,y = MeasLevel, color = Elevation..feet., group = dDate), size=1.5) +
#Powell zones
geom_line(data=dfPowellZonesShortMelt, aes(x = value, y = level_feet, group = Zone), size=1, color="purple", linetype = "longdash") +
scale_x_continuous(trans= "reverse") +
scale_y_continuous(limits = c(3300,3715), breaks = seq(3250,3711, by=50),labels=seq(3250,3711, by=50),  sec.axis = sec_axis(~. +0, name = "Active Storage\n(million acre-feet)", breaks = dfPowellZonesShort$level_feet, labels = dfPowellZonesShort$rightlabel)) +
#Continuous color scale by elevation
scale_color_continuous(low=palBlues[3],high=palBlues[9], na.value="White", guide = "colorbar", aesthetics="color") +
#Color breaked by zone
#scale_color_manual(breaks = c(3710,3650,3670,3525),values=c(palBlues[9],palBlues[7],palBlues[5],palBlues[3])) +
theme_bw() +
#coord_fixed() +
labs(x="Temperature (oC)", y="Elevation (feet)", color="Start Elevation\n(feet)")
cLakeElevationClasses <- c(3710,3655,3570,3525)
dfPowellTempLevelsPlot$ElevationClass <- cLakeElevationsClasses[1]
for (lev in cLakeElevationClasses) {
dfPowellTempLevelsPlot$ElevationClass <- ifelse(dfPowellTempLevelsPlot$Elevation..feet. <= lev,lev,dfPowellTempLevelsPlot$ElevationClass)
}
dfPowellTempLevelsPlot$ElevationClass <- as.factor(dfPowellTempLevelsPlot$ElevationClass)
ggplot() +
#Temperature profiles
geom_line(data=dfPlot, aes(x = T,y = MeasLevel, color = ElevationClass, group = dDate), size=1.5) +
#Powell zones
geom_line(data=dfPowellZonesShortMelt, aes(x = value, y = level_feet, group = Zone), size=1, color="purple", linetype = "longdash") +
scale_x_continuous(trans= "reverse") +
scale_y_continuous(limits = c(3300,3715), breaks = seq(3250,3711, by=50),labels=seq(3250,3711, by=50),  sec.axis = sec_axis(~. +0, name = "Active Storage\n(million acre-feet)", breaks = dfPowellZonesShort$level_feet, labels = dfPowellZonesShort$rightlabel)) +
#Continuous color scale by elevation
#scale_color_continuous(low=palBlues[3],high=palBlues[9], na.value="White", guide = "colorbar", aesthetics="color") +
#Color breaked by zone
scale_color_manual(breaks = cLakeElevationClasses,values=c(palBlues[9],palBlues[7],palBlues[5],palBlues[3])) +
theme_bw() +
#coord_fixed() +
labs(x="Temperature (oC)", y="Elevation (feet)", color="Start Elevation\n(feet)")
dfPlot <- dfPowellTempLevelsPlot
ggplot() +
#Temperature profiles
geom_line(data=dfPlot, aes(x = T,y = MeasLevel, color = ElevationClass, group = dDate), size=1.5) +
#Powell zones
geom_line(data=dfPowellZonesShortMelt, aes(x = value, y = level_feet, group = Zone), size=1, color="purple", linetype = "longdash") +
scale_x_continuous(trans= "reverse") +
scale_y_continuous(limits = c(3300,3715), breaks = seq(3250,3711, by=50),labels=seq(3250,3711, by=50),  sec.axis = sec_axis(~. +0, name = "Active Storage\n(million acre-feet)", breaks = dfPowellZonesShort$level_feet, labels = dfPowellZonesShort$rightlabel)) +
#Continuous color scale by elevation
#scale_color_continuous(low=palBlues[3],high=palBlues[9], na.value="White", guide = "colorbar", aesthetics="color") +
#Color breaked by zone
scale_color_manual(breaks = cLakeElevationClasses,values=c(palBlues[9],palBlues[7],palBlues[5],palBlues[3])) +
theme_bw() +
#coord_fixed() +
labs(x="Temperature (oC)", y="Elevation (feet)", color="Start Elevation\n(feet)")
ggplot() +
#Temperature profiles
geom_line(data=dfPlot, aes(x = T,y = MeasLevel, color = ElevationClass, group = dDate), size=1.5) +
#Powell zones
geom_line(data=dfPowellZonesShortMelt, aes(x = value, y = level_feet, group = Zone), size=1, color="purple", linetype = "longdash") +
scale_x_continuous(trans= "reverse") +
scale_y_continuous(limits = c(3300,3715), breaks = seq(3250,3711, by=50),labels=seq(3250,3711, by=50),  sec.axis = sec_axis(~. +0, name = "Active Storage\n(million acre-feet)", breaks = dfPowellZonesShort$level_feet, labels = dfPowellZonesShort$rightlabel)) +
#Continuous color scale by elevation
#scale_color_continuous(low=palBlues[3],high=palBlues[9], na.value="White", guide = "colorbar", aesthetics="color") +
#Color breaked by zone
scale_color_manual(breaks = cLakeElevationClasses,values=c(palBlues[9],palBlues[7],palBlues[5],palBlues[3])) +
theme_bw() +
#coord_fixed() +
labs(x="Temperature (oC)", y="Elevation (feet)", color="Start Elevation\n(feet)") +
theme(text = element_text(size=20), legend.text=element_text(size=16))
dfPowellTempLevelsPlot %>% group_by(dDateTemp)
dfPowellTempLevelsPlot %>% select(dDate,Elevation..feet.,MeasLevel, MonNum) %>% group_by(dDate, Elevation..feet.)
View(dfPowellTempDays)
View(dfPowellTempDays)
View(dfPowellLevels)
View(dfPowellLevels)
View(dfPowellTempLevelsPerDay)
dfPowellTempLevelsPerDay <- dfPowellTempLevelsPlot %>% group_by(Year,MonNum,dDate) %>% summarize(n())
dfPowellTempLevelsPerDay <- dfPowellTempLevelsPlot %>% group_by(Year,MonNum,dDate) %>% summarize(NumDays = (n(na.rm = TRUE))
dfPowellTempLevelsPlot %>% select(dDate,Elevation..feet.,MeasLevel, MonNum) %>% group_by(dDate, Elevation..feet.) %>% dfdfa
dfPowellTempLevelsPerDay <- dfPowellTempLevelsPlot %>% group_by(Year,MonNum,dDate) %>% summarize(NumDays = (n(na.rm = TRUE)))
dfPowellTempLevelsPerDay <- dfPowellTempLevelsPlot %>% group_by(Year,MonNum,dDate) %>% summarize(NumDays = (n()))
dfPowellTempLevelsPerDay <- dfPowellTempLevelsPlot %>% group_by(Year,MonNum,dDate) %>% summarize(NumDays = (dplyr::n()))
dfPowellTempLevelsPerDay <- dfPowellTempLevelsPlot %>% group_by(Year,MonNum,dDate) %>% dplyr::summarize(NumDays = (n()))
dfPowellTempLevelsPerDay <- dfPowellTempLevelsPlot %>% group_by(Year,MonNum,dDate) %>% dplyr::summarize(NumDays = n(), MinTemp=min(T),MaxTemp(max(T))))
dfPowellTempLevelsPerDay <- dfPowellTempLevelsPlot %>% group_by(Year,MonNum,dDate) %>% dplyr::summarize(NumDays = n(), MinTemp=min(T),MaxTemp(max(T)))
dfPowellTempLevelsPerDay <- dfPowellTempLevelsPlot %>% group_by(Year,MonNum,dDate) %>% dplyr::summarize(NumDays = n(), MinTemp=min(T),MaxTemp=max(T))
dfPowellTempLevelsPerDay <- dfPowellTempLevelsPlot %>% group_by(Year,MonNum,dDate, Elevation..feet.) %>% dplyr::summarize(NumDays = n(), MinTemp=min(T),MaxTemp=max(T), Level3525Temp = interp1(xi=3525, y=T, x=Elevation..feet., method="linear" ))
dfPowellTempLevelsPerDay <- dfPowellTempLevelsPlot %>% group_by(Year,MonNum,dDate, Elevation..feet.) %>% dplyr::summarize(NumDays = n(), MinTemp=min(T),MaxTemp=max(T), Level3525Temp = interp1(xi=3525, y=T, x=MeasLevel, method="linear" ))
dfPowellTempLevelsPerDay <- dfPowellTempLevelsPlot %>% group_by(Year,MonNum,dDate, Elevation..feet.) %>% dplyr::summarize(NumLevels = n(), MinTemp=min(T),MaxTemp=max(T), Level3525Temp = interp1(xi=3525, y=T, x=MeasLevel, method="linear" ))
dfPowellTempLevelsPerDay$Zone <- 3525
ggplot() +
#Temperature profiles
geom_line(data=dfPlot, aes(x = T,y = MeasLevel, color = ElevationClass, group = dDate), size=1.5) +
#Powell zones
geom_line(data=dfPowellZonesShortMelt, aes(x = value, y = level_feet, group = Zone), size=1, color="purple", linetype = "longdash") +
#Interpolated values
geom_point(data=dfPowellTempLevelsPerDay, aes(x=Level3525Temp,y=Zone)) +
scale_x_continuous(trans= "reverse") +
scale_y_continuous(limits = c(3300,3715), breaks = seq(3250,3711, by=50),labels=seq(3250,3711, by=50),  sec.axis = sec_axis(~. +0, name = "Active Storage\n(million acre-feet)", breaks = dfPowellZonesShort$level_feet, labels = dfPowellZonesShort$rightlabel)) +
#Continuous color scale by elevation
#scale_color_continuous(low=palBlues[3],high=palBlues[9], na.value="White", guide = "colorbar", aesthetics="color") +
#Color breaked by zone
scale_color_manual(breaks = cLakeElevationClasses,values=c(palBlues[9],palBlues[7],palBlues[5],palBlues[3])) +
theme_bw() +
#coord_fixed() +
labs(x="Temperature (oC)", y="Elevation (feet)", color="Start Elevation\n(feet)") +
theme(text = element_text(size=20), legend.text=element_text(size=16))
View(dfPlot)
dfTempAtDepth <- dfPlot %>% group_by(dDate) %>% summarize(IntTemp = interp1(xi=dfPowellZonesShort$level_feet,x=level_feet,y=T,method="linear"))
dfTempAtDepth <- dfPlot %>% group_by(dDate) %>% summarize(IntTemp = interp1(xi=dfPowellZonesShort$level_feet,x=MeasLevel,y=T,method="linear"))
dfTempAtDepth <- dfPlot %>% group_by(dDate) %>% summarize(IntTemp = interp2(xi=dfPowellZonesShort$level_feet,x=MeasLevel,y=T,method="linear"))
dfTempAtDepth <- dfPlot %>% group_by(dDate) %>% summarize(IntTemp = interp1(xi=dfPowellZonesShort$level_feet[3],x=MeasLevel,y=T,method="linear"))
View(dfTempAtDepth)
detach(package:plyr)
dfTempAtDepth <- dfPlot %>% group_by(dDate) %>% summarize(IntTemp = interp1(xi=dfPowellZonesShort$level_feet[3],x=MeasLevel,y=T,method="linear"))
dfTempAtDepth <- dfPlot %>% group_by(dDate) %>% summarize(IntTemp = interp2(xi=dfPowellZonesShort$level_feet[3],x=MeasLevel,y=T,method="linear"))
dfTempAtDepth <- dfPlot %>% group_by(dDate) %>% summarize(IntTemp = interp(xi=dfPowellZonesShort$level_feet[3],x=MeasLevel,y=T,method="linear"))
ggplot() +
#Temperature profiles
geom_line(data=dfPlot, aes(x = T,y = MeasLevel, color = ElevationClass, group = dDate), size=1.5) +
#Powell zones
geom_line(data=dfPowellZonesShortMelt, aes(x = value, y = level_feet, group = Zone), size=1, color="purple", linetype = "longdash") +
#Interpolated values
#geom_point(data=dfPowellTempLevelsPerDay, aes(x=Level3525Temp,y=Zone)) +
scale_x_continuous(trans= "reverse") +
scale_y_continuous(limits = c(3300,3715), breaks = seq(3250,3711, by=50),labels=seq(3250,3711, by=50),  sec.axis = sec_axis(~. +0, name = "Active Storage\n(million acre-feet)", breaks = dfPowellZonesShort$level_feet, labels = dfPowellZonesShort$rightlabel)) +
#Continuous color scale by elevation
#scale_color_continuous(low=palBlues[3],high=palBlues[9], na.value="White", guide = "colorbar", aesthetics="color") +
#Color breaked by zone
scale_color_manual(breaks = cLakeElevationClasses,values=c(palBlues[9],palBlues[7],palBlues[5],palBlues[3])) +
theme_bw() +
#coord_fixed() +
labs(x="Temperature (oC)", y="Elevation (feet)", color="Start Elevation\n(feet)") +
theme(text = element_text(size=20), legend.text=element_text(size=16))
dfTempAtDepth <- dfPlot %>% group_by(dDate) %>% summarize(IntTemp = interp1(xi=dfPowellZonesShort$level_feet[3], x=MeasLevel, y=T,method="linear"))
interpNA <- function(x, y, xi = x, ...) {
yi <- rep(NA, length(xi));
sel <- which(xi >= range(x)[1] & xi <= range(x)[2]);
yi[sel] <- interp1(x = x, y = y, xi = xi[sel], ...);
return(yi);
}
dfTempAtDepth <- dfPlot %>% group_by(dDate) %>% summarize(IntTemp = interpNA(xi=dfPowellZonesShort$level_feet[3], x=MeasLevel, y=T,method="linear"))
min(dfTempAtDepth$IntTemp)
min(dfTempAtDepth$IntTemp[~is.na(dfTempAtDepth$IntTemp)])
min(dfTempAtDepth$IntTemp %>% drop_na())
min(na.omit(dfTempAtDepth$IntTemp))
max(na.omit(dfTempAtDepth$IntTemp))
dfTempAtDepth <- data.frame(month,elevation,minTemp,maxTemp,rangeTemp)
dfTempAtDepth <- data.frame(month=0,elevation=0,minTemp=0,maxTemp=0,rangeTemp=0)
View(dfTempAtDepth)
dfTempAtDepth <- data.frame(MonNum=0,elevation=0,minTemp=0,maxTemp=0,rangeTemp=0)
dfTempAtDepth <- data.frame(MonNum=0,elevation=0,minTemp=0,maxTemp=0,rangeTemp=0)
for (elev in dfPowellZonesShort$level_feet) {
#Interpolate for each date group
dfCurrLevel <- dfPlot %>% group_by(MonNum, dDate) %>% summarize(IntTemp = interpNA(xi=elev, x=MeasLevel, y=T,method="linear"))
#Add to the dataframe
dfCurrLevelGroup <- dfCurrLevel %>% group_by(MonNum) %>% summarize(minTemp=min(IntTemp),maxTemp=max(IntTemp))
#nminTemp <- min(na.omit(dfTempAtDepth$IntTemp))
# <- max(na.omit(dfTempAtDepth$IntTemp))
dfCurrLevelGroup$Range <- dfCurrLevelGroup$maxTemp - dfCurrLevelGroup$minTemp
dfCurrLevelGroup$elevation <- elev
dfTempAtDepth <- rbind(dfTempAtDepth,dfCurrLevelGroup)
}
View(dfTempAtDepth)
View(dfCurrLevel)
sapply(dfPowellZonesShort,"class")
dfTempAtDepth <- data.frame(MonNum=0,elevation=0,minTemp=0,maxTemp=0,rangeTemp=0)
for (elev in dfPowellZonesShort$level_feet) {
#Interpolate for each date group
#dfCurrLevel <- dfPlot %>% group_by(MonNum, dDate) %>% summarize(IntTemp = interpNA(xi=elev, x=MeasLevel, y=T,method="linear"))
dfCurrLevel <- dfPlot %>% group_by(dDate) %>% summarize(IntTemp = interpNA(xi=elev, x=MeasLevel, y=T,method="linear"))
#Add to the dataframe
dfCurrLevelGroup <- dfCurrLevel %>% group_by(MonNum) %>% summarize(minTemp=min(IntTemp),maxTemp=max(IntTemp))
#nminTemp <- min(na.omit(dfTempAtDepth$IntTemp))
# <- max(na.omit(dfTempAtDepth$IntTemp))
dfCurrLevelGroup$Range <- dfCurrLevelGroup$maxTemp - dfCurrLevelGroup$minTemp
dfCurrLevelGroup$elevation <- elev
dfTempAtDepth <- rbind(dfTempAtDepth,dfCurrLevelGroup)
}
dfTempAtDepth <- data.frame(MonNum=0,elevation=0,minTemp=0,maxTemp=0,rangeTemp=0)
for (elev in dfPowellZonesShort$level_feet) {
#Interpolate for each date group
#dfCurrLevel <- dfPlot %>% group_by(MonNum, dDate) %>% summarize(IntTemp = interpNA(xi=elev, x=MeasLevel, y=T,method="linear"))
dfCurrLevel <- dfPlot %>% group_by(dDate) %>% summarize(IntTemp = interpNA(xi=elev, x=MeasLevel, y=T,method="linear"))
#Add to the dataframe
dfCurrLevelGroup <- dfCurrLevel %>% group_by(MonNum) %>% summarize(minTemp=min(IntTemp),maxTemp=max(IntTemp))
#nminTemp <- min(na.omit(dfTempAtDepth$IntTemp))
# <- max(na.omit(dfTempAtDepth$IntTemp))
dfCurrLevelGroup$Range <- dfCurrLevelGroup$maxTemp - dfCurrLevelGroup$minTemp
dfCurrLevelGroup$elevation <- elev
dfCurrLevelGroup$MonNum <- 6
dfTempAtDepth <- rbind(dfTempAtDepth,dfCurrLevelGroup)
}
dfTempAtDepth <- data.frame(MonNum=0,elevation=0,minTemp=0,maxTemp=0,rangeTemp=0)
for (elev in dfPowellZonesShort$level_feet) {
print(elev)
#Interpolate for each date group
#dfCurrLevel <- dfPlot %>% group_by(MonNum, dDate) %>% summarize(IntTemp = interpNA(xi=elev, x=MeasLevel, y=T,method="linear"))
dfCurrLevel <- dfPlot %>% group_by(dDate) %>% summarize(IntTemp = interpNA(xi=elev, x=MeasLevel, y=T,method="linear"))
#Add to the dataframe
dfCurrLevelGroup <- dfCurrLevel %>% group_by(MonNum) %>% summarize(minTemp=min(IntTemp),maxTemp=max(IntTemp))
#nminTemp <- min(na.omit(dfTempAtDepth$IntTemp))
# <- max(na.omit(dfTempAtDepth$IntTemp))
dfCurrLevelGroup$Range <- dfCurrLevelGroup$maxTemp - dfCurrLevelGroup$minTemp
dfCurrLevelGroup$elevation <- elev
dfCurrLevelGroup$MonNum <- 6
dfTempAtDepth <- rbind(dfTempAtDepth,dfCurrLevelGroup)
}
na.omit(dfCurrLevel$)
na.omit(dfCurrLevel$IntTemp)
View(dfCurrLevelGroup)
dfTempAtDepth <- data.frame(MonNum=0,elevation=0,minTemp=0,maxTemp=0,rangeTemp=0)
elev <- dfPowellZonesShort$level_feet[1]
print(elev)
dfCurrLevel <- dfPlot %>% group_by(dDate) %>% summarize(IntTemp = interpNA(xi=elev, x=MeasLevel, y=T,method="linear"))
dfCurrLevelGroup <- dfCurrLevel %>% group_by(MonNum) %>% summarize(minTemp=min(IntTemp),maxTemp=max(IntTemp))
dfTempAtDepth <- data.frame(MonNum=0,elevation=0,minTemp=0,maxTemp=0,rangeTemp=0)
elev <- dfPowellZonesShort$level_feet[1]
print(elev)
#Interpolate for each date group
#dfCurrLevel <- dfPlot %>% group_by(MonNum, dDate) %>% summarize(IntTemp = interpNA(xi=elev, x=MeasLevel, y=T,method="linear"))
dfCurrLevel <- dfPlot %>% group_by(MonNum, dDate) %>% summarize(IntTemp = interpNA(xi=elev, x=MeasLevel, y=T,method="linear"))
dfCurrLevelGroup <- dfCurrLevel %>% group_by(MonNum) %>% summarize(minTemp=min(IntTemp),maxTemp=max(IntTemp))
dfCurrLevelGroup$Range <- dfCurrLevelGroup$maxTemp - dfCurrLevelGroup$minTemp
dfCurrLevelGroup$elevation <- elev
dfCurrLevelGroup$MonNum <- 6
dfTempAtDepth <- rbind(dfTempAtDepth,dfCurrLevelGroup)
dfTempAtDepth
dfCurrLevelGroup
dfCurrLevelGroup <- dfCurrLevel %>% group_by(MonNum) %>% summarize(minTemp=min(IntTemp),maxTemp=max(IntTemp))
#nminTemp <- min(na.omit(dfTempAtDepth$IntTemp))
# <- max(na.omit(dfTempAtDepth$IntTemp))
dfCurrLevelGroup$rangeTemp <- dfCurrLevelGroup$maxTemp - dfCurrLevelGroup$minTemp
dfCurrLevelGroup$elevation <- elev
dfCurrLevelGroup$MonNum <- 6
dfTempAtDepth <- rbind(dfTempAtDepth,dfCurrLevelGroup)
dfTempAtDepth <- data.frame(MonNum=0,elevation=0,minTemp=0,maxTemp=0,rangeTemp=0)
for (elev in dfPowellZonesShort$level_feet) {
#elev <- dfPowellZonesShort$level_feet[1]
print(elev)
#Interpolate for each date group
#dfCurrLevel <- dfPlot %>% group_by(MonNum, dDate) %>% summarize(IntTemp = interpNA(xi=elev, x=MeasLevel, y=T,method="linear"))
dfCurrLevel <- dfPlot %>% group_by(MonNum, dDate) %>% summarize(IntTemp = interpNA(xi=elev, x=MeasLevel, y=T,method="linear"))
#Add to the dataframe
dfCurrLevelGroup <- dfCurrLevel %>% group_by(MonNum) %>% summarize(minTemp=min(IntTemp),maxTemp=max(IntTemp))
#nminTemp <- min(na.omit(dfTempAtDepth$IntTemp))
# <- max(na.omit(dfTempAtDepth$IntTemp))
dfCurrLevelGroup$rangeTemp <- dfCurrLevelGroup$maxTemp - dfCurrLevelGroup$minTemp
dfCurrLevelGroup$elevation <- elev
dfTempAtDepth <- rbind(dfTempAtDepth,dfCurrLevelGroup)
}
dfTempAtDepth <- dfTempAtDepth[2:nrow(dfTempAtDepth),]
dfTempAtDepth <- na.omit(dfTempAtDepth)
dfTempAtDepth <- data.frame(MonNum=0,ElevationClass=0,elevation=0,minTemp=0,maxTemp=0,rangeTemp=0)
#Loop over the elevations in the zone dataframe
for (elev in dfPowellZonesShort$level_feet) {
#elev <- dfPowellZonesShort$level_feet[1]
print(elev)
#Interpolate for each date group
dfCurrLevel <- dfPlot %>% group_by(MonNum, ElevationClass, dDate) %>% summarize(IntTemp = interpNA(xi=elev, x=MeasLevel, y=T,method="linear"))
#Add to the dataframe
dfCurrLevelGroup <- dfCurrLevel %>% group_by(MonNum,ElevationClass) %>% summarize(minTemp=min(IntTemp),maxTemp=max(IntTemp))
#nminTemp <- min(na.omit(dfTempAtDepth$IntTemp))
# <- max(na.omit(dfTempAtDepth$IntTemp))
dfCurrLevelGroup$rangeTemp <- dfCurrLevelGroup$maxTemp - dfCurrLevelGroup$minTemp
dfCurrLevelGroup$elevation <- elev
dfTempAtDepth <- rbind(dfTempAtDepth,dfCurrLevelGroup)
}
dfTempAtDepth
dfCurrLevelGroup
dfTempAtDepth <- data.frame(MonNum=0,ElevationClass=0,elevation=0,minTemp=0,maxTemp=0,rangeTemp=0)
#Loop over the elevations in the zone dataframe
for (elev in dfPowellZonesShort$level_feet) {
#elev <- dfPowellZonesShort$level_feet[1]
print(elev)
#Interpolate for each date group
dfCurrLevel <- dfPlot %>% group_by(MonNum, ElevationClass, dDate) %>% summarize(IntTemp = interpNA(xi=elev, x=MeasLevel, y=T,method="linear"))
#Add to the dataframe
dfCurrLevelGroup <- dfCurrLevel %>% group_by(MonNum,ElevationClass) %>% summarize(minTemp=min(IntTemp),maxTemp=max(IntTemp))
#nminTemp <- min(na.omit(dfTempAtDepth$IntTemp))
# <- max(na.omit(dfTempAtDepth$IntTemp))
dfCurrLevelGroup$rangeTemp <- dfCurrLevelGroup$maxTemp - dfCurrLevelGroup$minTemp
dfCurrLevelGroup$elevation <- elev
dfTempAtDepth <- rbind(dfTempAtDepth,dfCurrLevelGroup)
}
dfTempAtDepth <- rbind(dfTempAtDepth,dfCurrLevelGroup)
dfTempAtDepth
dfCurrLevelGroup
dfCurrLevelGroup$ElevationClass <- as.factor(dfCurrLevelGroup$ElevationClass)
dfTempAtDepth <- rbind(dfTempAtDepth,dfCurrLevelGroup)
bind_rows(dfTempAtDepth,dfCurrLevelGroup)
dfTempAtDepth <- data.frame(MonNum=0,ElevationClass=0,elevation=0,minTemp=0,maxTemp=0,rangeTemp=0)
dfTempAtDepth$ElevationClass <- as.factor(dfTempAtDepth$ElevationClass)
#Loop over the elevations in the zone dataframe
for (elev in dfPowellZonesShort$level_feet) {
#elev <- dfPowellZonesShort$level_feet[1]
print(elev)
#Interpolate for each date group
dfCurrLevel <- dfPlot %>% group_by(MonNum, ElevationClass, dDate) %>% summarize(IntTemp = interpNA(xi=elev, x=MeasLevel, y=T,method="linear"))
#Add to the dataframe
dfCurrLevelGroup <- dfCurrLevel %>% group_by(MonNum,ElevationClass) %>% summarize(minTemp=min(IntTemp),maxTemp=max(IntTemp))
#nminTemp <- min(na.omit(dfTempAtDepth$IntTemp))
# <- max(na.omit(dfTempAtDepth$IntTemp))
dfCurrLevelGroup$rangeTemp <- dfCurrLevelGroup$maxTemp - dfCurrLevelGroup$minTemp
dfCurrLevelGroup$elevation <- elev
dfCurrLevelGroup$ElevationClass <- as.factor(dfCurrLevelGroup$ElevationClass)
dfTempAtDepth <- rbind(dfTempAtDepth,dfCurrLevelGroup)
}
dfTempAtDepth <- data.frame(MonNum=0,elevation=0,minTemp=0,maxTemp=0,rangeTemp=0)
#Loop over the elevations in the zone dataframe
for (elev in dfPowellZonesShort$level_feet) {
#elev <- dfPowellZonesShort$level_feet[1]
print(elev)
#Interpolate for each date group
dfCurrLevel <- dfPlot %>% group_by(MonNum, ElevationClass, dDate) %>% summarize(IntTemp = interpNA(xi=elev, x=MeasLevel, y=T,method="linear"))
#Add to the dataframe
dfCurrLevelGroup <- dfCurrLevel %>% group_by(MonNum,ElevationClass) %>% summarize(minTemp=min(IntTemp),maxTemp=max(IntTemp))
#nminTemp <- min(na.omit(dfTempAtDepth$IntTemp))
# <- max(na.omit(dfTempAtDepth$IntTemp))
dfCurrLevelGroup$rangeTemp <- dfCurrLevelGroup$maxTemp - dfCurrLevelGroup$minTemp
dfCurrLevelGroup$elevation <- elev
#dfCurrLevelGroup$ElevationClass <- as.factor(dfCurrLevelGroup$ElevationClass)
dfTempAtDepth <- rbind(dfTempAtDepth,dfCurrLevelGroup)
}
dfTempAtDepth <- data.frame(MonNum=0,elevation=0,minTemp=0,maxTemp=0,rangeTemp=0)
dfTempAtDepth <- data.frame(MonNum=0,elevation=0,minTemp=0,maxTemp=0,rangeTemp=0)
#Loop over the elevations in the zone dataframe
for (elev in dfPowellZonesShort$level_feet) {
#elev <- dfPowellZonesShort$level_feet[1]
print(elev)
#Interpolate for each date group
dfCurrLevel <- dfPlot %>% group_by(MonNum, ElevationClass, dDate) %>% summarize(IntTemp = interpNA(xi=elev, x=MeasLevel, y=T,method="linear"))
#Add to the dataframe
dfCurrLevelGroup <- dfCurrLevel %>% group_by(MonNum) %>% summarize(minTemp=min(IntTemp),maxTemp=max(IntTemp))
#nminTemp <- min(na.omit(dfTempAtDepth$IntTemp))
# <- max(na.omit(dfTempAtDepth$IntTemp))
dfCurrLevelGroup$rangeTemp <- dfCurrLevelGroup$maxTemp - dfCurrLevelGroup$minTemp
dfCurrLevelGroup$elevation <- elev
#dfCurrLevelGroup$ElevationClass <- as.factor(dfCurrLevelGroup$ElevationClass)
dfTempAtDepth <- rbind(dfTempAtDepth,dfCurrLevelGroup)
}
dfTempAtDepth <- dfTempAtDepth[2:nrow(dfTempAtDepth),]
#Remove records with NAs
dfTempAtDepth <- na.omit(dfTempAtDepth)
cLakeElevationClasses <- c(3710,3655,3570,3525)
dfPowellTempLevelsPlot$ElevationClass <- cLakeElevationsClasses[1]
for (lev in cLakeElevationClasses) {
dfPowellTempLevelsPlot$ElevationClass <- ifelse(dfPowellTempLevelsPlot$Elevation..feet. <= lev,lev,dfPowellTempLevelsPlot$ElevationClass)
}
dfPowellTempLevelsPlot$fElevationClass <- as.factor(dfPowellTempLevelsPlot$ElevationClass)
cLakeElevationClasses <- c(3710,3655,3570,3525)
dfPowellTempLevelsPlot$ElevationClass <- cLakeElevationClasses[1]
for (lev in cLakeElevationClasses) {
dfPowellTempLevelsPlot$ElevationClass <- ifelse(dfPowellTempLevelsPlot$Elevation..feet. <= lev,lev,dfPowellTempLevelsPlot$ElevationClass)
}
dfPowellTempLevelsPlot$fElevationClass <- as.factor(dfPowellTempLevelsPlot$ElevationClass)
dfPlot <- dfPowellTempLevelsPlot
dfTempAtDepth <- data.frame(MonNum=0,ElevationClass = 0, elevation=0,minTemp=0,maxTemp=0,rangeTemp=0)
#Loop over the elevations in the zone dataframe
for (elev in dfPowellZonesShort$level_feet) {
#elev <- dfPowellZonesShort$level_feet[1]
print(elev)
#Interpolate for each date group
dfCurrLevel <- dfPlot %>% group_by(MonNum, ElevationClass, dDate) %>% summarize(IntTemp = interpNA(xi=elev, x=MeasLevel, y=T,method="linear"))
#Add to the dataframe
dfCurrLevelGroup <- dfCurrLevel %>% group_by(ElevationClass, MonNum) %>% summarize(minTemp=min(IntTemp),maxTemp=max(IntTemp))
#nminTemp <- min(na.omit(dfTempAtDepth$IntTemp))
# <- max(na.omit(dfTempAtDepth$IntTemp))
dfCurrLevelGroup$rangeTemp <- dfCurrLevelGroup$maxTemp - dfCurrLevelGroup$minTemp
dfCurrLevelGroup$elevation <- elev
#dfCurrLevelGroup$ElevationClass <- as.factor(dfCurrLevelGroup$ElevationClass)
dfTempAtDepth <- rbind(dfTempAtDepth,dfCurrLevelGroup)
}
dfTempAtDepth <- data.frame(MonNum=0,ElevationClass = 0, elevation=0,minTemp=0,maxTemp=0,rangeTemp=0)
elev <- dfPowellZonesShort$level_feet[1]
print(elev)
#Interpolate for each date group
dfCurrLevel <- dfPlot %>% group_by(MonNum, ElevationClass, dDate) %>% summarize(IntTemp = interpNA(xi=elev, x=MeasLevel, y=T,method="linear"))
dfCurrLevelGroup <- dfCurrLevel %>% group_by(ElevationClass, MonNum) %>% summarize(minTemp=min(IntTemp),maxTemp=max(IntTemp))
dfCurrLevelGroup$rangeTemp <- dfCurrLevelGroup$maxTemp - dfCurrLevelGroup$minTemp
dfCurrLevelGroup$elevation <- elev
dfTempAtDepth
dfCurrLevelGroup
dfTempAtDepth <- rbind(dfTempAtDepth,dfCurrLevelGroup)
dfTempAtDepth <- rbind(dfTempAtDepth,dfCurrLevelGroup, deparse.level=2)
dfTempAtDepth <- rbind(dfTempAtDepth,dfCurrLevelGroup, deparse.level=0)
dfTempAtDepth <- data.frame(MonNum=0,ElevationClass = 0, elevation=0,minTemp=0,maxTemp=0,rangeTemp=0)
elev <- dfPowellZonesShort$level_feet[1]
print(elev)
#Interpolate for each date group
dfCurrLevel <- dfPlot %>% group_by(MonNum, ElevationClass, dDate) %>% summarize(IntTemp = interpNA(xi=elev, x=MeasLevel, y=T,method="linear"))
#Add to the dataframe
dfCurrLevelGroup <- dfCurrLevel %>% group_by(ElevationClass, MonNum) %>% summarize(minTemp=min(IntTemp),maxTemp=max(IntTemp))
#nminTemp <- min(na.omit(dfTempAtDepth$IntTemp))
# <- max(na.omit(dfTempAtDepth$IntTemp))
dfCurrLevelGroup$rangeTemp <- dfCurrLevelGroup$maxTemp - dfCurrLevelGroup$minTemp
dfCurrLevelGroup$elevation <- elev
#dfCurrLevelGroup$ElevationClass <- as.factor(dfCurrLevelGroup$ElevationClass)
dfTempAtDepth <- rbind(dfTempAtDepth,dfCurrLevelGroup, deparse.level=0)
dfTempAtDepth <- data.frame(MonNum=0,ElevationClass = 0, elevation=0,minTemp=0,maxTemp=0,rangeTemp=0)
elev <- dfPowellZonesShort$level_feet[1]
print(elev)
#Interpolate for each date group
dfCurrLevel <- dfPlot %>% group_by(MonNum, ElevationClass, dDate) %>% summarize(IntTemp = interpNA(xi=elev, x=MeasLevel, y=T,method="linear"))
#Add to the dataframe
dfCurrLevelGroup <- dfCurrLevel %>% group_by(ElevationClass, MonNum) %>% summarize(minTemp=min(IntTemp),maxTemp=max(IntTemp))
#nminTemp <- min(na.omit(dfTempAtDepth$IntTemp))
# <- max(na.omit(dfTempAtDepth$IntTemp))
dfCurrLevelGroup$rangeTemp <- dfCurrLevelGroup$maxTemp - dfCurrLevelGroup$minTemp
dfCurrLevelGroup$elevation <- elev
#dfCurrLevelGroup$ElevationClass <- as.factor(dfCurrLevelGroup$ElevationClass)
dfTempAtDepth <- rbind(dfTempAtDepth,dfCurrLevelGroup, deparse.level=2)
dfTempAtDepth <- data.frame(MonNum=0,ElevationClass = 0, elevation=0,minTemp=0,maxTemp=0,rangeTemp=0)
elev <- dfPowellZonesShort$level_feet[1]
print(elev)
#Interpolate for each date group
dfCurrLevel <- dfPlot %>% group_by(MonNum, ElevationClass, dDate) %>% summarize(IntTemp = interpNA(xi=elev, x=MeasLevel, y=T,method="linear"))
#Add to the dataframe
dfCurrLevelGroup <- dfCurrLevel %>% group_by(ElevationClass, MonNum) %>% summarize(minTemp=min(IntTemp),maxTemp=max(IntTemp))
#nminTemp <- min(na.omit(dfTempAtDepth$IntTemp))
# <- max(na.omit(dfTempAtDepth$IntTemp))
dfCurrLevelGroup$rangeTemp <- dfCurrLevelGroup$maxTemp - dfCurrLevelGroup$minTemp
dfCurrLevelGroup$elevation <- elev
#dfCurrLevelGroup$ElevationClass <- as.factor(dfCurrLevelGroup$ElevationClass)
dfTempAtDepth <- rbind(dfTempAtDepth,as.data.frame(dfCurrLevelGroup))
dfTempAtDepth <- data.frame(MonNum=0,ElevationClass = 0, elevation=0,minTemp=0,maxTemp=0,rangeTemp=0)
#Loop over the elevations in the zone dataframe
for (elev in dfPowellZonesShort$level_feet) {
#elev <- dfPowellZonesShort$level_feet[1]
print(elev)
#Interpolate for each date group
dfCurrLevel <- dfPlot %>% group_by(MonNum, ElevationClass, dDate) %>% summarize(IntTemp = interpNA(xi=elev, x=MeasLevel, y=T,method="linear"))
#Add to the dataframe
dfCurrLevelGroup <- dfCurrLevel %>% group_by(ElevationClass, MonNum) %>% summarize(minTemp=min(IntTemp),maxTemp=max(IntTemp))
#nminTemp <- min(na.omit(dfTempAtDepth$IntTemp))
# <- max(na.omit(dfTempAtDepth$IntTemp))
dfCurrLevelGroup$rangeTemp <- dfCurrLevelGroup$maxTemp - dfCurrLevelGroup$minTemp
dfCurrLevelGroup$elevation <- elev
#dfCurrLevelGroup$ElevationClass <- as.factor(dfCurrLevelGroup$ElevationClass)
dfTempAtDepth <- rbind(dfTempAtDepth,as.data.frame(dfCurrLevelGroup))
}
ggsave("PowellTempProfile.png", width=9, height = 6.5, units="in")
ggplot() +
#Temperature profiles
geom_line(data=dfPlot, aes(x = T,y = MeasLevel, color = ElevationClass, group = dDate), size=1.5) +
#Powell zones
geom_line(data=dfPowellZonesShortMelt, aes(x = value, y = level_feet, group = Zone), size=1, color="purple", linetype = "longdash") +
#Interpolated values
#geom_point(data=dfPowellTempLevelsPerDay, aes(x=Level3525Temp,y=Zone)) +
scale_x_continuous(trans= "reverse") +
scale_y_continuous(limits = c(3300,3715), breaks = seq(3250,3711, by=50),labels=seq(3250,3711, by=50),  sec.axis = sec_axis(~. +0, name = "Active Storage\n(million acre-feet)", breaks = dfPowellZonesShort$level_feet, labels = dfPowellZonesShort$rightlabel)) +
#Continuous color scale by elevation
#scale_color_continuous(low=palBlues[3],high=palBlues[9], na.value="White", guide = "colorbar", aesthetics="color") +
#Color breaked by zone
scale_color_manual(breaks = cLakeElevationClasses,values=c(palBlues[9],palBlues[7],palBlues[5],palBlues[3])) +
theme_bw() +
#coord_fixed() +
labs(x="Temperature (oC)", y="Elevation (feet)", color="Start Elevation\n(feet)") +
theme(text = element_text(size=18), legend.text=element_text(size=14))
ggplot() +
#Temperature profiles
geom_line(data=dfPlot, aes(x = T,y = MeasLevel, color = fElevationClass, group = dDate), size=1.5) +
#Powell zones
geom_line(data=dfPowellZonesShortMelt, aes(x = value, y = level_feet, group = Zone), size=1, color="purple", linetype = "longdash") +
#Interpolated values
#geom_point(data=dfPowellTempLevelsPerDay, aes(x=Level3525Temp,y=Zone)) +
scale_x_continuous(trans= "reverse") +
scale_y_continuous(limits = c(3300,3715), breaks = seq(3250,3711, by=50),labels=seq(3250,3711, by=50),  sec.axis = sec_axis(~. +0, name = "Active Storage\n(million acre-feet)", breaks = dfPowellZonesShort$level_feet, labels = dfPowellZonesShort$rightlabel)) +
#Continuous color scale by elevation
#scale_color_continuous(low=palBlues[3],high=palBlues[9], na.value="White", guide = "colorbar", aesthetics="color") +
#Color breaked by zone
scale_color_manual(breaks = cLakeElevationClasses,values=c(palBlues[9],palBlues[7],palBlues[5],palBlues[3])) +
theme_bw() +
#coord_fixed() +
labs(x="Temperature (oC)", y="Elevation (feet)", color="Start Elevation\n(feet)") +
theme(text = element_text(size=18), legend.text=element_text(size=14))
ggsave("PowellTempProfile.png", width=9, height = 6.5, units="in")
ggplot() +
#Temperature profiles
geom_line(data=dfPlot, aes(x = T,y = MeasLevel, color = Elevation..feet., group = dDate), size=1.5) +
#Powell zones
geom_line(data=dfPowellZonesShortMelt, aes(x = value, y = level_feet, group = Zone), size=1, color="purple", linetype = "longdash") +
scale_x_continuous(trans= "reverse") +
scale_y_continuous(limits = c(3300,3715), breaks = seq(3250,3711, by=50),labels=seq(3250,3711, by=50),  sec.axis = sec_axis(~. +0, name = "Active Storage\n(million acre-feet)", breaks = dfPowellZonesShort$level_feet, labels = dfPowellZonesShort$rightlabel)) +
#Continuous color scale by elevation
scale_color_continuous(low=palBlues[3],high=palBlues[9], na.value="White", guide = "colorbar", aesthetics="color") +
#Color breaked by zone
#scale_color_manual(breaks = c(3710,3650,3670,3525),values=c(palBlues[9],palBlues[7],palBlues[5],palBlues[3])) +
theme_bw() +
#coord_fixed() +
labs(x="Temperature (oC)", y="Elevation (feet)", color="Start Elevation\n(feet)") +
theme(text = element_text(size=18), legend.text=element_text(size=16))
ggsave("PowellTempProfileCont.png", width=9, height = 6.5, units="in")
